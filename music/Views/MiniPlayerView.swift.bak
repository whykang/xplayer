import SwiftUI

struct MiniPlayerView: View {
    @ObservedObject private var musicPlayer = MusicPlayer.shared
    @State private var showFullPlayer = false
    
    var body: some View {
        if let currentSong = musicPlayer.currentSong {
            VStack(spacing: 0) {
                // 播放进度条
                GeometryReader { geometry in
                    ZStack(alignment: .leading) {
                        Rectangle()
                            .fill(Color.gray.opacity(0.2))
                            .frame(height: 2)
                        
                        Rectangle()
                            .fill(Color.blue)
                            .frame(width: geometry.size.width * musicPlayer.progress, height: 2)
                    }
                }
                .frame(height: 2)
                
                // 迷你播放器内容
                HStack(spacing: 12) {
                    // 歌曲封面
                    AlbumArtworkView(song: currentSong, size: 40)
                        .cornerRadius(4)
                        .padding(.leading, 8)
                    
                    // 歌曲信息
                    VStack(alignment: .leading, spacing: 2) {
                        Text(currentSong.title)
                            .font(.system(size: 15, weight: .medium))
                            .lineLimit(1)
                        
                        Text(currentSong.artist)
                            .font(.system(size: 13))
                            .foregroundColor(.secondary)
                            .lineLimit(1)
                    }
                    
                    Spacer()
                    
                    // 上一首按钮
                    Button(action: {
                        musicPlayer.playPrevious()
                    }) {
                        Image(systemName: "backward.fill")
                            .font(.system(size: 20))
                            .foregroundColor(.primary)
                            .frame(width: 40, height: 40)
                    }
                    
                    // 播放/暂停按钮
                    Button(action: {
                        musicPlayer.playPause()
                    }) {
                        Image(systemName: musicPlayer.isPlaying ? "pause.fill" : "play.fill")
                            .font(.system(size: 22))
                            .foregroundColor(.primary)
                            .frame(width: 40, height: 40)
                    }
                    
                    // 下一首按钮
                    Button(action: {
                        musicPlayer.playNext()
                    }) {
                        Image(systemName: "forward.fill")
                            .font(.system(size: 20))
                            .foregroundColor(.primary)
                            .frame(width: 40, height: 40)
                    }
                    .padding(.trailing, 8)
                }
                .padding(.vertical, 6)
                .background(Color(UIColor.systemBackground))
                .cornerRadius(10)
                .shadow(color: Color.black.opacity(0.1), radius: 4, x: 0, y: 2)
            }
            .onTapGesture {
                showFullPlayer = true
            }
            .sheet(isPresented: $showFullPlayer) {
                PlayerDetailView(isPresented: $showFullPlayer)
            }
        } else {
            EmptyView()
        }
    }
}

struct MiniPlayerView_Previews: PreviewProvider {
    static var previews: some View {
        VStack {
            Spacer()
            MiniPlayerView()
                .padding(.bottom, 49)
        }
        .background(Color(UIColor.systemGroupedBackground))
        .edgesIgnoringSafeArea(.all)
    }
} 